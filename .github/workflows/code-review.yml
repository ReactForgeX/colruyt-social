name: Automated Code Review

on:
  pull_request:
    types: [opened, synchronize]
    branches: [main, develop]

jobs:
  code-review:
    name: Code Review
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint
        continue-on-error: true

      - name: Run TypeScript type checking
        run: npm run tsc --noEmit
        continue-on-error: true

      - name: Run Prettier check
        run: npm run prettier -- --check .
        continue-on-error: true

      # - name: Run Jest tests
      #   run: npm test
      #   continue-on-error: true

      - name: Run SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Code Review Summary
        uses: actions/github-script@v6
        with:
          script: |
            const eslintFailed = steps['Run ESLint'].outcome === 'failure';
            const typecheckFailed = steps['Run TypeScript type checking'].outcome === 'failure';
            const prettierFailed = steps['Run Prettier check'].outcome === 'failure';
            const testsFailed = steps['Run Jest tests'].outcome === 'failure';

            let summary = '## Code Review Summary\n\n';
            summary += '| Check | Status |\n';
            summary += '|-------|--------|\n';
            summary += `| ESLint | ${eslintFailed ? '‚ùå' : '‚úÖ'} |\n`;
            summary += `| TypeScript | ${typecheckFailed ? '‚ùå' : '‚úÖ'} |\n`;
            summary += `| Prettier | ${prettierFailed ? '‚ùå' : '‚úÖ'} |\n`;
            summary += `| Tests | ${testsFailed ? '‚ùå' : '‚úÖ'} |\n\n`;

            if (eslintFailed || typecheckFailed || prettierFailed || testsFailed) {
              summary += '### üö® Issues Found\n\n';
              summary += 'Please fix the issues marked with ‚ùå above before merging.\n';
            } else {
              summary += '### ‚úÖ All Checks Passed\n\n';
              summary += 'Code review checks completed successfully.\n';
            }

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: summary
            });
